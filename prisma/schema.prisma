generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Party {
  id        Int       @id @default(autoincrement())
  name      String
  abbreviation String? 
  color     String? // hex color
  logoUrl   String? // public URL to logo in /public/images
  candidates Candidate[]
  results    Result[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Constituency {
  id        Int      @id @default(autoincrement())
  name      String
  state     String   @default("Tamil Nadu")
  code      String?  // optional code/id
  candidates Candidate[]
  results    Result[]
}

model Candidate {
  id             Int          @id @default(autoincrement())
  name           String
  partyId        Int
  constituencyId Int
  photoUrl       String?
  bio            String?
  Party          Party        @relation(fields: [partyId], references: [id])
  Constituency   Constituency @relation(fields: [constituencyId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  results        Result[]
}

model Article {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  summary   String?
  content   String
  imageUrl  String?
  published Boolean  @default(false)
  publishedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Result {
  id             Int          @id @default(autoincrement())
  constituencyId Int
  partyId        Int?
  candidateId    Int?
  votes          Int         @default(0)
  leading        Boolean     @default(false)
  won            Boolean     @default(false)
  updatedAt      DateTime    @updatedAt
  Constituency   Constituency @relation(fields: [constituencyId], references: [id])
  Party          Party?       @relation(fields: [partyId], references: [id])
  Candidate      Candidate?   @relation(fields: [candidateId], references: [id])
}
